// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package db

import (
	"encoding/json"
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Entity struct {
	ID             uuid.UUID       `json:"id"`
	OrganizationID uuid.UUID       `json:"organization_id"`
	EntityType     string          `json:"entity_type"`
	Path           string          `json:"path"`
	Properties     json.RawMessage `json:"properties"`
	CreatedAt      time.Time       `json:"created_at"`
	UpdatedAt      time.Time       `json:"updated_at"`
}

type EntityJoin struct {
	ID              uuid.UUID   `json:"id"`
	OrganizationID  uuid.UUID   `json:"organization_id"`
	Name            string      `json:"name"`
	Description     pgtype.Text `json:"description"`
	LeftEntityType  string      `json:"left_entity_type"`
	RightEntityType string      `json:"right_entity_type"`
	JoinField       pgtype.Text `json:"join_field"`
	JoinFieldType   pgtype.Text `json:"join_field_type"`
	LeftFilters     []byte      `json:"left_filters"`
	RightFilters    []byte      `json:"right_filters"`
	SortCriteria    []byte      `json:"sort_criteria"`
	CreatedAt       time.Time   `json:"created_at"`
	UpdatedAt       time.Time   `json:"updated_at"`
	JoinType        string      `json:"join_type"`
}

type EntitySchema struct {
	ID             uuid.UUID       `json:"id"`
	OrganizationID uuid.UUID       `json:"organization_id"`
	Name           string          `json:"name"`
	Description    pgtype.Text     `json:"description"`
	Fields         json.RawMessage `json:"fields"`
	CreatedAt      time.Time       `json:"created_at"`
	UpdatedAt      time.Time       `json:"updated_at"`
}

type Organization struct {
	ID          uuid.UUID   `json:"id"`
	Name        string      `json:"name"`
	Description pgtype.Text `json:"description"`
	CreatedAt   time.Time   `json:"created_at"`
	UpdatedAt   time.Time   `json:"updated_at"`
}
