// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package db

import (
	"encoding/json"
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type EntitiesHistory struct {
	ID             uuid.UUID          `json:"id"`
	EntityID       uuid.UUID          `json:"entity_id"`
	OrganizationID uuid.UUID          `json:"organization_id"`
	SchemaID       uuid.UUID          `json:"schema_id"`
	EntityType     string             `json:"entity_type"`
	Path           string             `json:"path"`
	Properties     json.RawMessage    `json:"properties"`
	CreatedAt      time.Time          `json:"created_at"`
	UpdatedAt      time.Time          `json:"updated_at"`
	Version        int64              `json:"version"`
	ChangeType     string             `json:"change_type"`
	ChangedAt      pgtype.Timestamptz `json:"changed_at"`
	Reason         pgtype.Text        `json:"reason"`
}

// Staging table for COPY-based entity ingestion
type EntitiesIngest struct {
	OrganizationID uuid.UUID          `json:"organization_id"`
	SchemaID       uuid.UUID          `json:"schema_id"`
	EntityType     string             `json:"entity_type"`
	Path           string             `json:"path"`
	Properties     json.RawMessage    `json:"properties"`
	BatchID        uuid.UUID          `json:"batch_id"`
	EnqueuedAt     pgtype.Timestamptz `json:"enqueued_at"`
}

type Entity struct {
	ID             uuid.UUID       `json:"id"`
	OrganizationID uuid.UUID       `json:"organization_id"`
	EntityType     string          `json:"entity_type"`
	Path           string          `json:"path"`
	Properties     json.RawMessage `json:"properties"`
	CreatedAt      time.Time       `json:"created_at"`
	UpdatedAt      time.Time       `json:"updated_at"`
	SchemaID       uuid.UUID       `json:"schema_id"`
	Version        int64           `json:"version"`
}

type EntityExportJob struct {
	ID                       uuid.UUID          `json:"id"`
	OrganizationID           uuid.UUID          `json:"organization_id"`
	JobType                  string             `json:"job_type"`
	EntityType               pgtype.Text        `json:"entity_type"`
	TransformationID         pgtype.UUID        `json:"transformation_id"`
	Filters                  []byte             `json:"filters"`
	RowsRequested            int32              `json:"rows_requested"`
	RowsExported             int32              `json:"rows_exported"`
	BytesWritten             pgtype.Int8        `json:"bytes_written"`
	FilePath                 pgtype.Text        `json:"file_path"`
	FileMimeType             pgtype.Text        `json:"file_mime_type"`
	FileByteSize             pgtype.Int8        `json:"file_byte_size"`
	Status                   string             `json:"status"`
	ErrorMessage             pgtype.Text        `json:"error_message"`
	EnqueuedAt               pgtype.Timestamptz `json:"enqueued_at"`
	StartedAt                pgtype.Timestamptz `json:"started_at"`
	CompletedAt              pgtype.Timestamptz `json:"completed_at"`
	UpdatedAt                time.Time          `json:"updated_at"`
	TransformationDefinition []byte             `json:"transformation_definition"`
	TransformationOptions    []byte             `json:"transformation_options"`
}

type EntityExportLog struct {
	ID             uuid.UUID   `json:"id"`
	ExportJobID    uuid.UUID   `json:"export_job_id"`
	OrganizationID uuid.UUID   `json:"organization_id"`
	RowIdentifier  pgtype.Text `json:"row_identifier"`
	ErrorMessage   string      `json:"error_message"`
	CreatedAt      time.Time   `json:"created_at"`
}

type EntityIngestBatch struct {
	ID             uuid.UUID          `json:"id"`
	OrganizationID uuid.UUID          `json:"organization_id"`
	SchemaID       uuid.UUID          `json:"schema_id"`
	EntityType     string             `json:"entity_type"`
	FileName       pgtype.Text        `json:"file_name"`
	RowsStaged     int32              `json:"rows_staged"`
	RowsFlushed    int32              `json:"rows_flushed"`
	SkipValidation bool               `json:"skip_validation"`
	Status         string             `json:"status"`
	ErrorMessage   pgtype.Text        `json:"error_message"`
	EnqueuedAt     pgtype.Timestamptz `json:"enqueued_at"`
	StartedAt      pgtype.Timestamptz `json:"started_at"`
	CompletedAt    pgtype.Timestamptz `json:"completed_at"`
	UpdatedAt      time.Time          `json:"updated_at"`
}

type EntityJoin struct {
	ID              uuid.UUID   `json:"id"`
	OrganizationID  uuid.UUID   `json:"organization_id"`
	Name            string      `json:"name"`
	Description     pgtype.Text `json:"description"`
	LeftEntityType  string      `json:"left_entity_type"`
	RightEntityType string      `json:"right_entity_type"`
	JoinField       pgtype.Text `json:"join_field"`
	JoinFieldType   pgtype.Text `json:"join_field_type"`
	LeftFilters     []byte      `json:"left_filters"`
	RightFilters    []byte      `json:"right_filters"`
	SortCriteria    []byte      `json:"sort_criteria"`
	CreatedAt       time.Time   `json:"created_at"`
	UpdatedAt       time.Time   `json:"updated_at"`
	JoinType        string      `json:"join_type"`
}

type EntitySchema struct {
	ID                uuid.UUID       `json:"id"`
	OrganizationID    uuid.UUID       `json:"organization_id"`
	Name              string          `json:"name"`
	Description       pgtype.Text     `json:"description"`
	Fields            json.RawMessage `json:"fields"`
	CreatedAt         time.Time       `json:"created_at"`
	UpdatedAt         time.Time       `json:"updated_at"`
	Version           string          `json:"version"`
	PreviousVersionID pgtype.UUID     `json:"previous_version_id"`
	Status            string          `json:"status"`
}

type EntityTransformation struct {
	ID             uuid.UUID   `json:"id"`
	OrganizationID uuid.UUID   `json:"organization_id"`
	Name           string      `json:"name"`
	Description    pgtype.Text `json:"description"`
	Nodes          []byte      `json:"nodes"`
	CreatedAt      time.Time   `json:"created_at"`
	UpdatedAt      time.Time   `json:"updated_at"`
}

type IngestionLog struct {
	ID             uuid.UUID   `json:"id"`
	OrganizationID uuid.UUID   `json:"organization_id"`
	SchemaName     string      `json:"schema_name"`
	FileName       string      `json:"file_name"`
	RowNumber      pgtype.Int4 `json:"row_number"`
	ErrorMessage   string      `json:"error_message"`
	CreatedAt      time.Time   `json:"created_at"`
}

type Organization struct {
	ID          uuid.UUID   `json:"id"`
	Name        string      `json:"name"`
	Description pgtype.Text `json:"description"`
	CreatedAt   time.Time   `json:"created_at"`
	UpdatedAt   time.Time   `json:"updated_at"`
}
