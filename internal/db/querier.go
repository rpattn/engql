// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package db

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	CreateEntity(ctx context.Context, arg CreateEntityParams) (CreateEntityRow, error)
	CreateEntityJoin(ctx context.Context, arg CreateEntityJoinParams) (CreateEntityJoinRow, error)
	CreateEntitySchema(ctx context.Context, arg CreateEntitySchemaParams) (CreateEntitySchemaRow, error)
	CreateEntitySchemaAndArchivePrevious(ctx context.Context, arg CreateEntitySchemaAndArchivePreviousParams) (CreateEntitySchemaAndArchivePreviousRow, error)
	CreateOrganization(ctx context.Context, arg CreateOrganizationParams) (Organization, error)
	DeleteEntity(ctx context.Context, id uuid.UUID) error
	DeleteEntityJoin(ctx context.Context, id uuid.UUID) error
	DeleteOrganization(ctx context.Context, id uuid.UUID) error
	EntityIngestBatchStats(ctx context.Context, organizationID pgtype.UUID) (EntityIngestBatchStatsRow, error)
	FilterEntitiesByProperty(ctx context.Context, arg FilterEntitiesByPropertyParams) ([]FilterEntitiesByPropertyRow, error)
	GetEntitiesByIDs(ctx context.Context, ids []uuid.UUID) ([]GetEntitiesByIDsRow, error)
	GetEntity(ctx context.Context, id uuid.UUID) (GetEntityRow, error)
	GetEntityAncestors(ctx context.Context, arg GetEntityAncestorsParams) ([]GetEntityAncestorsRow, error)
	GetEntityChildren(ctx context.Context, arg GetEntityChildrenParams) ([]GetEntityChildrenRow, error)
	GetEntityCount(ctx context.Context, organizationID uuid.UUID) (int64, error)
	GetEntityCountByType(ctx context.Context, arg GetEntityCountByTypeParams) (int64, error)
	GetEntityDescendants(ctx context.Context, arg GetEntityDescendantsParams) ([]GetEntityDescendantsRow, error)
	GetEntityHistoryByVersion(ctx context.Context, arg GetEntityHistoryByVersionParams) (EntitiesHistory, error)
	GetEntityJoin(ctx context.Context, id uuid.UUID) (GetEntityJoinRow, error)
	GetEntitySchema(ctx context.Context, id uuid.UUID) (GetEntitySchemaRow, error)
	GetEntitySchemaByName(ctx context.Context, arg GetEntitySchemaByNameParams) (GetEntitySchemaByNameRow, error)
	GetEntitySchemaVersionByNumber(ctx context.Context, arg GetEntitySchemaVersionByNumberParams) (GetEntitySchemaVersionByNumberRow, error)
	GetEntitySiblings(ctx context.Context, arg GetEntitySiblingsParams) ([]GetEntitySiblingsRow, error)
	GetMaxEntityHistoryVersion(ctx context.Context, entityID uuid.UUID) (int64, error)
	GetOrganization(ctx context.Context, id uuid.UUID) (Organization, error)
	GetOrganizationByName(ctx context.Context, name string) (Organization, error)
	InsertEntityHistoryRecord(ctx context.Context, arg InsertEntityHistoryRecordParams) error
	// Track background flush batches for staged entity ingestion.
	InsertEntityIngestBatch(ctx context.Context, arg InsertEntityIngestBatchParams) error
	ListEntities(ctx context.Context, arg ListEntitiesParams) ([]ListEntitiesRow, error)
	ListEntitiesByType(ctx context.Context, arg ListEntitiesByTypeParams) ([]ListEntitiesByTypeRow, error)
	ListEntityHistory(ctx context.Context, entityID uuid.UUID) ([]EntitiesHistory, error)
	ListEntityIngestBatchesByStatus(ctx context.Context, arg ListEntityIngestBatchesByStatusParams) ([]EntityIngestBatch, error)
	ListEntityJoinsByOrganization(ctx context.Context, organizationID uuid.UUID) ([]ListEntityJoinsByOrganizationRow, error)
	ListEntitySchemaVersions(ctx context.Context, arg ListEntitySchemaVersionsParams) ([]ListEntitySchemaVersionsRow, error)
	ListEntitySchemas(ctx context.Context, organizationID uuid.UUID) ([]ListEntitySchemasRow, error)
	ListOrganizations(ctx context.Context) ([]Organization, error)
	MarkEntityIngestBatchCompleted(ctx context.Context, arg MarkEntityIngestBatchCompletedParams) error
	MarkEntityIngestBatchFailed(ctx context.Context, arg MarkEntityIngestBatchFailedParams) error
	MarkEntityIngestBatchFlushing(ctx context.Context, id uuid.UUID) error
	MarkEntitySchemaInactive(ctx context.Context, id uuid.UUID) error
	SchemaExists(ctx context.Context, arg SchemaExistsParams) (bool, error)
	UpdateEntity(ctx context.Context, arg UpdateEntityParams) (UpdateEntityRow, error)
	UpdateEntityJoin(ctx context.Context, arg UpdateEntityJoinParams) (UpdateEntityJoinRow, error)
	UpdateOrganization(ctx context.Context, arg UpdateOrganizationParams) (Organization, error)
	UpsertEntityFromHistory(ctx context.Context, arg UpsertEntityFromHistoryParams) error
}

var _ Querier = (*Queries)(nil)
